32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400   1) using Godot;
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400   2) using System;
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400   3) using Godot.Collections;
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400   4) 
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400   5) 
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400   6) public class Bracket: Node2D
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400   7) {
c0262133 (Noah Dahle     2022-10-09 23:40:14 -0400   8)   Globals g;
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400   9)   int size = 0;
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  10)   Sprite user, other;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400  11) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400  12)   //Will be used for .json file
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  13)   private static Dictionary _beastsOps = null;
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  14)   private static Dictionary _opponentsOps = null;
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  15)   private static Dictionary _attackOptions = null;
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  16) 
ea9fbb7a (Jake Looney    2022-11-04 18:26:06 -0400  17)   private AudioStreamPlayer music, musicP, se;
ea9fbb7a (Jake Looney    2022-11-04 18:26:06 -0400  18) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400  19)   private Dictionary opponentsOps 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400  20)   {
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  21)     get {
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  22)       if (_opponentsOps == null) {
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  23)         var file = new File();
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  24)         file.Open("res://Data/Opponents.json", File.ModeFlags.Read);
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  25)         var text = file.GetAsText();
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  26)         _opponentsOps = JSON.Parse(text).Result as Dictionary;
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  27)       }
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  28)       return _opponentsOps;
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  29)     }
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  30)   }
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  31) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400  32)   private Dictionary beastsOps 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400  33)   {
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  34)     get {
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  35)       if (_beastsOps == null) {
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  36)         var file = new File();
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  37)         file.Open("res://Data/Beasts.json", File.ModeFlags.Read);
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  38)         var text = file.GetAsText();
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  39)         _beastsOps = JSON.Parse(text).Result as Dictionary;
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  40)       }
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  41)       return _beastsOps;
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  42)     }
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  43)   }
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400  44) 
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  45)     private Dictionary attackOptions {
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  46)     get {
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  47)       if (_attackOptions == null) {
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  48)         var file = new File();
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  49)         file.Open("res://Data/Attacks.json", File.ModeFlags.Read);
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  50)         var text = file.GetAsText();
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  51)         _attackOptions = JSON.Parse(text).Result as Dictionary;
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  52)       }
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  53)       return _attackOptions;
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  54)     }
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  55)   }
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  56)   
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  57)   private void get_curr_beast(Dictionary beasts)
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  58)   {
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  59)     GD.Print(g.currBeast);
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  60)     select_beast("Other", g.currBeast, true);
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  61)     
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  62)    }
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  63)   public void DrawCircleArc(Vector2 center, float radius, float angleFrom, float angleTo, Color color)
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  64) {
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  65)     int nbPoints = 32;
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  66)     var pointsArc = new Vector2[nbPoints];
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  67) 
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  68)     for (int i = 0; i < nbPoints; ++i)
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  69)     {
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  70)         float anglePoint = Mathf.Deg2Rad(angleFrom + i * (angleTo - angleFrom) / nbPoints - 90f);
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  71)         pointsArc[i] = center + new Vector2(Mathf.Cos(anglePoint), Mathf.Sin(anglePoint)) * radius;
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  72)     }
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  73) 
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  74)     for (int i = 0; i < nbPoints - 1; ++i)
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  75)         DrawLine(pointsArc[i], pointsArc[i + 1], color);
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  76) }
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400  77) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400  78)   //At the end of the game, this will be reset to default values.
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400  79)   private void reset_all() 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400  80)   {
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400  81)     g.name = "Player";
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400  82)     for (int i = 0; i < 7; i++) g.oppName[i] = "CPU";
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400  83)     for (int i = 0; i < 7; i++) g.oppBeast[i] = -1;
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400  84)     g.playerBeastIndex = -1;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400  85)     g.level = 0;
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400  86)     g.bracketSize = -1;
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400  87)     g.fightOutcome = -1;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400  88)   }
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400  89) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400  90)   //This function hides/shows certain things when the buttons big or small are pressed
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400  91)   private void for_button() 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400  92)   {
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400  93)     GetNode<Button>("Big").Hide();
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400  94)     GetNode<Button>("Small").Hide();
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400  95)     GetNode<Label>("Welcome").Hide();
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400  96)     GetNode<Sprite>("Sprite").Show();
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400  97)     GetNode<Button>("Continue").Show();
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400  98)   }
94f570a0 (Noah Dahle     2022-10-18 12:15:57 -0400  99) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 100)   //This function hides the continue and exit button
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 101)   public void hideall() 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 102)   {
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 103)     GetNode<Button>("Continue").Hide();
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 104)     GetNode<Sprite>("Sprite").Hide();
48852403 (Noah Dahle     2022-10-22 16:32:30 -0400 105)     GetNode<Button>("Exit").Hide();
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 106) 
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 107)   }
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 108)   
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 109)   //This displays/hides certain things when the player wins
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 110)   public void display_win() 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 111)   {
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 112)     GetNode<Button>("Continue").Hide();
84b33b6c (Noah Dahle     2022-10-11 08:45:20 -0400 113)     GetNode<Label>("Welcome").Text = "You Win! Press exit to return to title menu.";
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 114)     GetNode<Button>("Big").Hide();
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 115)     GetNode<Button>("Small").Hide();
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 116)     GetNode<Button>("Exit").Show();
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 117)     GetNode<Button>("Exit").Text = "Exit";
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 118)     GetNode<Sprite>("Sprite").Show();
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 119)     hide_sprites();
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 120)   }
48852403 (Noah Dahle     2022-10-22 16:32:30 -0400 121) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 122)   //This function uses a random number generator to select a beast for the opponents
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 123)   private void get_random_beast(Dictionary opponents, int opp) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 124)   {
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 125)     Godot.Collections.Array attacks;
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 126)     Dictionary beast;
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400 127)     Random rnd = new Random();
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400 128)     int num = rnd.Next();
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400 129)     opponents = opponentsOps[(num % 5).ToString()] as Dictionary;
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 130)     beast = beastsOps[(num % 5).ToString()] as Dictionary;
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 131)     attacks = (Godot.Collections.Array)beast["attacks"];
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 132)     g.oppName[opp] = (String) opponents["name"];
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 133)     g.oppBeast[opp] = Int32.Parse((String) opponents["beast"]);
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 134)     num = rnd.Next() % 3;
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 135)     g.oppMods[opp] = num;
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 136)     
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 137)     for (int i = 0; i < 4; i++) {
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 138)       num = rnd.Next();
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 139)       num %= 6;
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 140)       g.oppAttacks[opp,i] = (int)(float)attacks[num];
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 141)       for (int j = 0; j < i; j++) {
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 142)         if (g.oppAttacks[opp, i] == g.oppAttacks[opp, j]) {
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 143)           i--;
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 144)           break;
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 145)         }
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 146)       }
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 147)     }
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 148) 
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 149) 
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 150)     GD.Print((String) beast["name"] + ": " + g.oppAttacks[opp,0] + " " + g.oppAttacks[opp, 1] + " " + g.oppAttacks[opp, 2] + " " + g.oppAttacks[opp, 3]);
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 151)   }
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 152) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 153)   //This is what the user is greeted with when first entering the bracket
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 154)   private void display_welcome() 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 155)   {
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 156)     hideall();
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 157)     GetNode<Button>("Small").Text = "Small";
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 158)     GetNode<Button>("Big").Text ="Big";
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 159)     GetNode<Label>("Welcome").Text = "Hi " + g.name + "! Do you want to enter the small or big tournament?";
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 160)   }
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 161)   
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 162)   //This function gets the player's name and beast from globals.cs and initializes them in bracket
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 163)   private void initialize_player(Globals g, Dictionary beasts) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 164)   {
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 165)     if (g.level == 0) beasts = beastsOps[(g.playerBeastIndex).ToString()] as Dictionary;
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 166)     select_beast("Sprite", g.playerBeastIndex, true);
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 167)     select_beast("Player", g.playerBeastIndex, true);
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 168)     GetNode<Label>("Sprite/Name").Text = g.name;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 169)     GetNode<Label>("Sprite/Name").Show();
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 170)     GetNode<Sprite>("Sprite").Position = new Vector2(90 + 100*g.level, 55+50*g.level);
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 171)     
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 172)   }
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 173) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 174)   //This gets the opponents that were randomly generated and initializes their names and beasts
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 175)   private void initialize_opponents(Globals g) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 176)   {
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 177) 
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 178)     for (int i = 0; i < 7; i++) {
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 179)       select_beast("Sprite" + (i+2).ToString(), i, false);
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 180)       GetNode<Label>("Sprite" + (i+2).ToString() + "/Name").Text = g.oppName[i];
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 181)       GetNode<Label>("Sprite" + (i+2).ToString() + "/Name").Show();
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 182)       if (g.level == 0) GetNode<Sprite>("Sprite" + (i+2).ToString()).Hide();
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 183)       if (g.level == 0) GetNode<Sprite>("Sprite" + (i+2).ToString()).Position = new Vector2(110, 40+ 50*(i+2));
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 184)     }
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 185)   }
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 186) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 187)   //Function shows the sprites based on which bracket the player chooses
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 188)   private void show_sprites(int size) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 189)   {
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 190)     GetNode<Sprite>("Sprite").Show();
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 191)     GetNode<Sprite>("Sprite2").Show();
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 192)     GetNode<Sprite>("Sprite3").Show();
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 193)     GetNode<Sprite>("Sprite4").Show();
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 194)     GetNode<Sprite>("Player").Show();
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 195)     GetNode<Sprite>("Other").Show();
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 196) 
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 197)     if (size == 4) {
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 198)       GetNode<Sprite>("Sprite5").Show();
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 199)       GetNode<Sprite>("Sprite6").Show();
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 200)       GetNode<Sprite>("Sprite7").Show();
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 201)       GetNode<Sprite>("Sprite8").Show();
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400 202)     }
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 203)   }
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 204)   
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 205)   //This function hides all the sprites
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 206)   private void hide_sprites() 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 207)   {
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 208)     GetNode<Sprite>("Player").Hide();
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 209)     GetNode<Sprite>("Other").Hide();
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 210)     GetNode<Sprite>("Sprite2").Hide();
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 211)     GetNode<Sprite>("Sprite3").Hide();
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 212)     GetNode<Sprite>("Sprite4").Hide();
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 213)     GetNode<Sprite>("Sprite5").Hide();
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 214)     GetNode<Sprite>("Sprite6").Hide();
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 215)     GetNode<Sprite>("Sprite7").Hide();
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 216)     GetNode<Sprite>("Sprite8").Hide();
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 217)   }
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 218)   
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 219)   //Shows the beasts that one the last bracket depending on the level
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 220)   private void show_on_bracket() 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 221)   {
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 222)         if (g.level == 1) {
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 223)       GetNode<Sprite>("Sprite3").Show();
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 224)       select_beast("Other", 2, false);
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 225)       if (g.bracketSize == 1) {
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 226)         GetNode<Sprite>("Sprite5").Show();
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 227)         select_beast("Other", 4, false);
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 228)         GetNode<Sprite>("Sprite7").Show();
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 229)         select_beast("Other", 6, false);
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 230)       } else {
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 231)         select_beast("Other", 1, false);
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 232)        }
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 233)     }
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 234)     
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 235)       if (g.level >= 1) {
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 236)     GetNode<Sprite>("Player").Show();
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 237)     GetNode<Sprite>("Other").Show();
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 238)    }
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 239)   }
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 240) 
ea9fbb7a (Jake Looney    2022-11-04 18:26:06 -0400 241)     private void StartMusic(){
ea9fbb7a (Jake Looney    2022-11-04 18:26:06 -0400 242)     se = g.GetNode<AudioStreamPlayer>("SoundEffects");
ea9fbb7a (Jake Looney    2022-11-04 18:26:06 -0400 243)     music = g.GetNode<AudioStreamPlayer>("Music");
ea9fbb7a (Jake Looney    2022-11-04 18:26:06 -0400 244)     musicP = g.GetNode<AudioStreamPlayer>("MusicPlayer");
ea9fbb7a (Jake Looney    2022-11-04 18:26:06 -0400 245)     music.Stop();
ea9fbb7a (Jake Looney    2022-11-04 18:26:06 -0400 246)     musicP.Stop();
ea9fbb7a (Jake Looney    2022-11-04 18:26:06 -0400 247)     
869f2312 (Jake Looney    2022-11-07 18:58:07 -0500 248)     if (g.fightOutcome == 0)
869f2312 (Jake Looney    2022-11-07 18:58:07 -0500 249)       return;
869f2312 (Jake Looney    2022-11-07 18:58:07 -0500 250)     else if(g.level - 1 == 2 && g.bracketSize == 1)
869f2312 (Jake Looney    2022-11-07 18:58:07 -0500 251)       music.Stream = ResourceLoader.Load("res://Assets/Music/VictoryTheme.mp3") as AudioStream;
869f2312 (Jake Looney    2022-11-07 18:58:07 -0500 252)     else if (g.level - 1 == 1 && g.bracketSize == 0)
869f2312 (Jake Looney    2022-11-07 18:58:07 -0500 253)       music.Stream = ResourceLoader.Load("res://Assets/Music/VictoryTheme.mp3") as AudioStream;
869f2312 (Jake Looney    2022-11-07 18:58:07 -0500 254)     else
ea9fbb7a (Jake Looney    2022-11-04 18:26:06 -0400 255)       music.Stream = ResourceLoader.Load("res://Assets/Music/BracketTheme.mp3") as AudioStream;
ea9fbb7a (Jake Looney    2022-11-04 18:26:06 -0400 256)    
869f2312 (Jake Looney    2022-11-07 18:58:07 -0500 257) 
869f2312 (Jake Looney    2022-11-07 18:58:07 -0500 258)     music.Play();
ea9fbb7a (Jake Looney    2022-11-04 18:26:06 -0400 259)   }
ea9fbb7a (Jake Looney    2022-11-04 18:26:06 -0400 260) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 261)   //This is the function that gets called first
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 262)   public override void _Ready() 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 263)   {
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 264) 
3d0bbf9b (Noah Dahle     2022-11-06 13:29:14 -0500 265)     GetNode<TextureRect>("Background").Texture = ResourceLoader.Load("res://Assets/tournament.png") as Texture;
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 266)     //I hide all sprites to begin with
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 267)     hide_sprites();
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 268)     
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400 269)     Dictionary opponents = null;
f53d1fe8 (Noah Dahle     2022-10-23 01:59:25 -0400 270)     Dictionary beasts = null;
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 271)     
48852403 (Noah Dahle     2022-10-22 16:32:30 -0400 272)     GetNode<Button>("Exit").Hide();
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 273)     
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 274)     //initialize globals
48852403 (Noah Dahle     2022-10-22 16:32:30 -0400 275)     g = (Globals)GetNode("/root/Gm");
f68a641f (Noah Dahle     2022-10-18 09:15:06 -0400 276) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 277)     //Display welcome if it's the first time
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 278)     if (g.bracketSize == -1) {
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 279)       display_welcome();
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 280)     }
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 281) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 282)     //Set size depending on which bracket they chose
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 283)     if (g.bracketSize == 0) {
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 284)       size = 2;
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 285)       GetNode<Button>("Small").Hide();
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 286)       GetNode<Button>("Big").Hide();
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 287)       Update();
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 288)     } else if (g.bracketSize == 1) {
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 289)       GetNode<Button>("Small").Hide();
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 290)       GetNode<Button>("Big").Hide();
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 291)       size = 4;
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 292)       Update();
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 293)     }
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 294)     
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 295)     initialize_player(g, beasts);
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 296)     
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 297)     //Tests to see if player won or lost
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 298)     if (g.fightOutcome == 1) Won();
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 299)     else if (g.fightOutcome == 0) Lost();
1e62bf86 (Noah Dahle     2022-10-18 11:01:49 -0400 300)     
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 301) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 302)     //if it's the first time, create random beasts
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 303)     if (g.level == 0) {
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 304)       for (int i = 0; i < 7; i++) {
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 305)         get_random_beast(opponents, i);
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 306)       }
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 307)     }
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 308)     //then initialize them
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 309)     initialize_opponents(g);
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 310)     if (g.level == 0) g.currBeast = g.oppBeast[0];
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 311)     get_curr_beast(beasts);
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 312)     
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 313)     show_on_bracket();
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 314)     
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 315) 
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 316)     
ea9fbb7a (Jake Looney    2022-11-04 18:26:06 -0400 317)     StartMusic();
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 318)   }
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 319)   
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 320)  //This draws the bracket
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 321)   public override void _Draw()
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 322)   {
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 323)     //If a size hasn't been selected, don't do anything
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 324)     if (size == 0) return;
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 325) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 326)     //This creates the vectors necessary for making the bracket
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 327)     var points = new Vector2[100];
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 328)     var points2 = new Vector2[100];
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 329)     var points4 = new Vector2[2];
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 330)     var points3 = new Vector2[100];
a2e61ded (Noah Dahle     2022-11-06 22:36:02 -0500 331)     var color = new Color(1, 1, 1, 1 );
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 332)     int i, levels;
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 333)     levels = size;
3d0bbf9b (Noah Dahle     2022-11-06 13:29:14 -0500 334)     var left = new Vector2(500, 500);
3d0bbf9b (Noah Dahle     2022-11-06 13:29:14 -0500 335)     var right = new Vector2(875, 500);
3d0bbf9b (Noah Dahle     2022-11-06 13:29:14 -0500 336)     var center = new Vector2(650, 450);
a2e61ded (Noah Dahle     2022-11-06 22:36:02 -0500 337)     var col = new Color(1, 1, 1, 1 );
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 338)     
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 339)   GetNode<TextureRect>("TextureRect").RectPosition = center;
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 340)   GetNode<TextureRect>("TextureRect").Texture = ResourceLoader.Load("res://Assets/Logo.png") as Texture;
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 341) 
3d0bbf9b (Noah Dahle     2022-11-06 13:29:14 -0500 342) 
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 343)   DrawCircleArc(left, 80, 0, 380, col);
bff53524 (Noah Dahle     2022-11-06 12:31:08 -0500 344)   DrawCircleArc(right, 80, 0, 380, col);
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 345)   GetNode<Sprite>("Player").Position = left;
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 346)   GetNode<Sprite>("Other").Position = right;
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 347)   
60f20e00 (Noah Dahle     2022-11-05 17:27:39 -0400 348)   
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 349)   
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 350)     /*Level 1*/
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 351)     for (i = 0; i < levels; i++) {
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 352)       points[i*6]     = new Vector2(100 , 100 + i * 100);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 353)       points[i*6 + 1] = new Vector2(200, 100 + i * 100);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 354)       points[i*6 + 2] = new Vector2(100, 150 + i * 100);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 355)       points[i*6 + 3] = new Vector2(200, 150 + i * 100);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 356)       points[i*6 + 4] = new Vector2(200, 100 + 100* i);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 357)       points[i*6 + 5] = new Vector2(200, 150 + 100 * i);
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 358) 
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 359)     }
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 360) 
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 361)     levels = levels / 2;
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 362)     
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 363)     /*Level 2*/
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 364)     for (i = 0; i <  levels; i++) {
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 365)       points2[i*6]   = new Vector2(200, 125 + i*200);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 366)       points2[i*6+1] = new Vector2(300, 125 + i*200);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 367)       points2[i*6+2] = new Vector2(200, 225 + i*200);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 368)       points2[i*6+3] = new Vector2(300, 225 + i*200);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 369)       points2[i*6+4] = new Vector2(300, 125 + i*200);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 370)       points2[i*6+5] = new Vector2(300, 225 + i*200);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 371)     }
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 372) 
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 373)     if (levels < 2) {
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 374)       points4[0] = new Vector2(300, 175);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 375)       points4[1] = new Vector2(400, 175);
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 376) 
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 377)       DrawMultiline(points, color, (float) 15.0, false );
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 378)       DrawMultiline(points2, color, (float) 15.0, false );
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 379)       DrawMultiline(points3, color, (float) 15.0, false );
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 380)       DrawMultiline(points4, color, (float) 15.0, false );
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 381) 
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 382)       return;
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 383) 
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 384)     }
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 385)     levels = levels / 2;
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 386)     
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 387)     /*Level 3*/
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 388)     for (i = 0; i < levels; i++) {
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 389)       points3[i*6] = new Vector2(300, 175);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 390)       points3[i*6+1] = new Vector2(400, 175);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 391)       points3[i*6+2] = new Vector2(300, 375);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 392)       points3[i*6+3] = new Vector2(400, 375);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 393)       points3[i*6+4] = new Vector2(400, 175);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 394)       points3[i*6+5] = new Vector2(400, 375);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 395)     }
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 396) 
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 397)     /*LEVEL 4*/
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 398)     points4[0] = new Vector2(400, 275);
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 399)     points4[1] = new Vector2(500, 275);
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 400) 
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 401) 
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 402) 
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 403)     DrawMultiline(points, color, (float) 15.0, false );
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 404)     DrawMultiline(points2, color, (float) 15.0, false );
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 405)     DrawMultiline(points3, color, (float) 15.0, false );
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 406)     DrawMultiline(points4, color, (float) 15.0, false );
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 407)   }
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 408) 
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 409) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 410)   //This is called when the player won the last fight
1e62bf86 (Noah Dahle     2022-10-18 11:01:49 -0400 411)   private void Won()
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 412)   {
94f570a0 (Noah Dahle     2022-10-18 12:15:57 -0400 413)     GetNode<Sprite>("Sprite").Position = new Vector2(100 + 100*(g.level+1), 50+50*(g.level+1));
94f570a0 (Noah Dahle     2022-10-18 12:15:57 -0400 414) 
1ef85d86 (Noah Dahle     2022-10-22 16:23:06 -0400 415)     if (g.level == 0) {
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 416) 
1ef85d86 (Noah Dahle     2022-10-22 16:23:06 -0400 417)       GetNode<Sprite>("Sprite3").Position = new Vector2(120 + 100*(g.level+1), 180 + 50*(g.level+1));
0be14925 (Noah Dahle     2022-10-24 13:57:19 -0400 418)       g.currBeast = g.oppBeast[1];
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 419)       if (g.bracketSize == 1) {
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 420)         GetNode<Sprite>("Sprite5").Position = new Vector2(120 + 100*(g.level+1), 210 + 100*(g.level+1));
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 421)         GetNode<Sprite>("Sprite7").Position = new Vector2(120 + 100*(g.level+1), 250 + 150*(g.level+1));
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 422)       }
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 423) 
1ef85d86 (Noah Dahle     2022-10-22 16:23:06 -0400 424)     }
1e62bf86 (Noah Dahle     2022-10-18 11:01:49 -0400 425)   
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 426)     if (g.level == 1 && g.bracketSize == 1) {
0be14925 (Noah Dahle     2022-10-24 13:57:19 -0400 427)        g.currBeast = g.oppBeast[6];
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 428)        GetNode<Sprite>("Sprite7").Position = new Vector2(120 + 100*(g.level+1), 350);
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 429)        GetNode<Sprite>("Sprite7").Show();
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 430)      }
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 431) 
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 432)     if (g.level == 2 && g.bracketSize == 1) {
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 433)       display_win();
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 434)     }
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 435)     
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 436)     if (g.level == 1 && g.bracketSize == 0) {
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 437)       display_win();
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 438)     }
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 439)     
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 440)     g.level++;
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 441)   }
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 442)   
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 443)   //When the player loses, this function is called
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 444)   //It makes the player exit back to the title menu
1e62bf86 (Noah Dahle     2022-10-18 11:01:49 -0400 445)   private void Lost()
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 446)   {
1e62bf86 (Noah Dahle     2022-10-18 11:01:49 -0400 447)     g.name = "Player";
1e62bf86 (Noah Dahle     2022-10-18 11:01:49 -0400 448)     g.level = 0;
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 449)     g.bracketSize = -1;
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 450)     g.fightOutcome = 0;
1e62bf86 (Noah Dahle     2022-10-18 11:01:49 -0400 451)     GetNode<Button>("Exit").Show();
1e62bf86 (Noah Dahle     2022-10-18 11:01:49 -0400 452)     GetNode<Button>("Exit").Text = "Exit";
1e62bf86 (Noah Dahle     2022-10-18 11:01:49 -0400 453)     GetNode<Button>("Continue").Hide();
0948d82e (Noah Dahle     2022-10-18 11:18:45 -0400 454)     GetNode<Label>("Welcome").Text = "You lose! Press exit to return to the title menu";
1e62bf86 (Noah Dahle     2022-10-18 11:01:49 -0400 455) 
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 456)   }
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 457) 
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 458)   private void _on_Continue_pressed()
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 459)   {
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 460)     GetTree().ChangeScene("res://Fight/Fight.tscn");
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 461)   }
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 462) 
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 463) 
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 464)   private void _on_Big_pressed()
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 465)   {
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 466)     g = (Globals)GetNode("/root/Gm");
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 467)     g.bracketSize = 1;
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 468)     size = 4;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 469)     for_button();
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 470)     show_sprites(size);
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 471)     Update();
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 472)   }
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 473) 
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 474) 
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 475)   private void _on_Small_pressed()
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 476)   {
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 477)     g = (Globals)GetNode("/root/Gm");
d8c43b25 (Colin Canonaco 2022-10-24 01:27:29 -0400 478)     g.bracketSize = 0;
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 479)     size = 2;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 480)     for_button();
805db90d (Noah Dahle     2022-10-23 14:02:58 -0400 481)     show_sprites(size);
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 482)     Update();
32d3b497 (Noah Dahle     2022-10-06 15:07:21 -0400 483)   }
7f716901 (Noah Dahle     2022-10-06 18:49:48 -0400 484) 
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 485) 
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 486) 
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 487)   private void _on_Exit_pressed()
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 488)   {
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 489)     GetNode<Sprite>("Sprite").Position = new Vector2(0,0);
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 490)     reset_all();
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 491)     GetTree().ChangeScene("res://Menus/TitleMenu.tscn");
fea5ad79 (Noah Dahle     2022-10-10 13:28:49 -0400 492)   }
1ef85d86 (Noah Dahle     2022-10-22 16:23:06 -0400 493) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 494)   //This will be changed later to be cleaner (without switch statement)
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 495)   //But right now, this function is used to set the sprite's texture
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 496)   private void select_beast(string sprite, int opp, bool player) 
0aa8828e (Noah Dahle     2022-10-24 19:23:17 -0400 497)   {
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 498)     int pick;
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 499)     if (player) pick = opp;
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 500)     else pick = g.oppBeast[opp];
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 501)       
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 502)     
b11b7bc5 (Noah Dahle     2022-10-24 13:46:32 -0400 503)     switch (pick) {
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 504)       case 0:
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 505)         GetNode<Sprite>(sprite).Texture = ResourceLoader.Load("res://Assets/Character Sprites/Auril-1.png") as Texture;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 506)         break;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 507)       case 1:
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 508)         GetNode<Sprite>(sprite).Texture = ResourceLoader.Load("res://Assets/Character Sprites/Solanac-1.png") as Texture;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 509)         break;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 510)       case 2:
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 511)         GetNode<Sprite>(sprite).Texture = ResourceLoader.Load("res://Assets/Character Sprites/Alzrius-1.png") as Texture;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 512)         break;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 513)       case 3:
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 514)         GetNode<Sprite>(sprite).Texture = ResourceLoader.Load("res://Assets/Character Sprites/Glabbagool.png") as Texture;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 515)         break;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 516)       case 4:
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 517)         GetNode<Sprite>(sprite).Texture = ResourceLoader.Load("res://Assets/Character Sprites/Bunpir.png") as Texture;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 518)         break;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 519)       default:
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 520)         GetNode<Sprite>(sprite).Texture = ResourceLoader.Load("res://Assets/Character Sprites/Auril-1.png") as Texture;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 521)         break;
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 522)     } 
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 523)   }
e0b60a52 (Noah Dahle     2022-10-23 13:21:13 -0400 524) 
62fed1fe (Noah Dahle     2022-10-09 19:28:42 -0400 525) }
